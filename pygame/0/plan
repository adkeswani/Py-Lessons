- Prior setup:
    - Set displays to mirrored
    - NEVER use FULLSCREEN in Pygame
    - Put laptop with lesson open next to monitor, readable size.
    - Tell BradH when to order pizza
    - Take cups up with lunch
    - Slide keys under Brad's door, give cards to Beth to return
    - *Keep Open http://www.pygame.org/docs/ref/display.html*

- Introduce ourselves

- Questions:
    - Who has coded before?
    - Who has done Python before?
    - Move around based on this

    - Assuming you're all willing to play around with the code
    - Very quick explanations, lots of experimenting
    - Feel free to ask questions, but play around with it first
    - Will get you to show off stuff afterwards

- Going to set everything up, make sure you remember how to do this as we will be using it often
    - Cables under the desks
    - Opening up editor, *ask if people know vim*, otherwise xCode
        - Set up indenting, *Go to Xcode menu, Preferences, Indentation, make sure tab width is 4 inserting spaces (unchecked)*
        - Creating a new file
    - Opening a terminal - iTerm
    - Navigating around the filesystem on terminal, show cd, ls, cd .., tab completion, less plan in correct directory
        - Spend some time on this, make sure everyone has it
    - Opening Safari, loading the docs page, look here for more info

- *Open rainbow.py*

- Initializing Pygame
    - import pygame, pygame.locals
    - pygame.init()
    - pygame.display.set_mode()
        - Size of space you can draw in, (0,0)
        - Flags, resizable/fullscreen/hardware
        - Depth, leave default

- Surfaces
    - set_mode creates surface
    - Canvas
    - display == special, shown on screen, get_surface
    - pygame.Surface, size
    - convert(), faster format, always call
    - fill, RGB?
    - blit, copy onto, destination, source, position
        - (0,0), top left, positive
    - flip, updates screen

- Frame rate
    - Clock
    - tick, fps
    - while loop, closes

- Events
    - Keeps queue
    - event.get(), empties, must every frame
    - Can guess, other types (see docs), not how we handle keys
    - Copy-paste for exit

- Run it
    - python <filename.py>
    - Also run finished rainbow, will do this

- Experiments:
    - Change position and colour of blue
    - Animate blue by altering blitting position each loop, get it to bounce if you can
        - Will fail badly, explain blitting
        - blit background
    - Change frame rate
    - Create 4 * 8 grid of blues blitted to screen with spacing between them
    - Use the commented code at the bottom to generate 32 different coloured surfaces and blit
    - Animate this by shifting the colours forward one each time and wrapping around
    - Ask questions if you're stuck!

- Show off what you've done

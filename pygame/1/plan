- *Open loader.py*

- Loading images:
    - image.load, path to image, images dir path, exception, returns Surface
    - Make parts transparent, 3 ways:
        - Colorkey transparency, pick colour, make it fully transparent, rest fully opaque, argument/-1
        - Per-pixel alpha, each pixel RGB + A, 0 to 255, set up in image program
            - convert_alpha(), like convert(), keeps per-pixel alpha
        - Surface alpha, set_alpha(N), not done in loader
    - There is speed difference, read more if you need speed
    - Can copy-paste this code, does convert for us

- *Open images.py*

- Transforming surfaces:
    - load_image returns Surface
    - transform.smoothscale, returns scaled
    - Others www.pygame.org/docs/ref/transform.html

- Displaying image:
    - Just blit the surface

- *Run images.py*

- Experiments:
    - Open the image files in the images subdirectory, see what's inside
    - Replace black background with image loaded from background.png, transform it to fit screen, much like how it's sized at the moment
    - Load ship1.png onto a different surface and make the pink transparent, the pink is (255,0,150), try the -1 argument too
        - This won't work immediately, try commenting out the transform and see what happens, ask yourself why, hint: transforming returns a new surface
    - Try set_alpha on both ship surfaces, what happens?
    - Try some different transforms on image using docs
    - Animate the surfaces, but use random to choose the speed, see commented random.randint call
    - Use transform as the image moves, e.g. spinning, spinning and scaling

- Show off what you've done

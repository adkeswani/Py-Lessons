Python lessons
        - Object oriented programming
                - Classes and objects
                - Fields
                - Methods
                - Subclasses and superclasses
                - Polymorphism/overloading
                - Private vs. public vs. protected
        - Python intro
                - How to write classes and objects (use object designed above)
                - How to subclass
                - Constructors & overloading?
                - Python interpreter
                - The self parameter
        - Modules and main
                - Creating your own (naming)
                - Ways of writing a main function
                - Random
                - Getting input from the user
        - Data types and structures
                - Explain dyanmic, strongly typed
                - Standard types (ints, strings, floats)
                - Tuples
                - Lists
                - Dictionaries
                - Methods like len
        - Control structures
                - while loops
                - for loops
                        - range
                        - list
        - Exception handling
        - Functional programming?
        - kwargs, default values
        - Garbage collection?
        - Overloading
Pygame lessons
        - Setting up a Pygame application
                - Setting up (init, sound, background, screen size)
        - Sprites and sprite groups
                - Loading a sprite (transparency, colorkey)
                - Rects
                - Sprite groups and applications
        - Collisions
                - Types of collisions
                - Collisions between groups
                - Purposes of different types of collisions
        - Event handling and input
                - Event handling purpose
                - Mouse and keyboard input
        - Frame rate
                - Clock
        - Sounds
                - Loading a sound
                - Playing a sound
